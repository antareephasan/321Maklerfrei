{"version":3,"sources":["assets/img/logo.svg","assets/img/forgot-password-office.jpeg","assets/img/forgot-password-office-dark.jpeg","components/Forms/ResetPasswordForm.js","pages/ResetPassword.js"],"names":["ResetPasswordForm","resetPassword","useContext","AuthContext","React","useState","saved","setSaved","query","URLSearchParams","useLocation","search","className","initialValues","password","validationSchema","Yup","shape","min","matches","required","onSubmit","setStatus","setSubmitting","get","then","response","catch","error","data","message","errors","status","touched","isSubmitting","as","Input","name","type","placeholder","valid","block","value","disabled","ResetPassword","to","src","logo","alt","ImageLight","ImageDark"],"mappings":"mGAAe,QAA0B,gC,mCCA1B,QAA0B,mD,mCCA1B,QAA0B,wD,wJCgF1BA,MAnEf,WACE,IAAQC,EAAkBC,qBAAWC,KAA7BF,cACR,EAA0BG,IAAMC,UAAS,GAAM,mBAAxCC,EAAK,KAAEC,EAAQ,KAChBC,EANC,IAAIC,gBAAgBC,cAAcC,QAQzC,OAAGL,EAEC,mBAAGM,UAAU,oCAAmC,iFAOlD,cAAC,IAAM,CACLC,cAAe,CACbC,SAAU,IAEZC,iBAAkBC,MAAaC,MAAM,CACnCH,SAAUE,MAAaE,IAAI,GACxBC,QAAQ,cAAe,+BACvBA,QAAQ,iBAAkB,+BAC1BC,SAAS,0BAEdC,SAAU,cAAiD,IAA9CP,EAAQ,EAARA,SAAcQ,EAAS,EAATA,UAAWC,EAAa,EAAbA,cACpCA,GAAc,GACdD,IACArB,EAAca,EAAUN,EAAMgB,IAAI,SAAWhB,EAAMgB,IAAI,SAAW,IACjEC,MAAK,SAAAC,GACJnB,GAAS,GACTgB,GAAc,EAChB,IACCI,OAAM,SAAAC,GACFA,EAAMF,SACPJ,EAAUM,EAAMF,SAASG,KAAKC,SAE9BR,EAAU,yCAEZC,GAAc,EAChB,GACF,EAAE,SAED,gBAAGQ,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACvC,eAAC,IAAI,WACH,eAAC,QAAK,WACJ,4CACA,cAAC,IAAK,CAACtB,UAAU,OAAOuB,GAAIC,QAAOC,KAAK,WAAWC,KAAK,WAAWC,YAAY,oBAC9ER,EAAOjB,UAAYmB,EAAQnB,SAC1B,8BACE,cAAC,aAAU,CAAC0B,OAAO,EAAM,SAAET,EAAOjB,aAElC,QAIN,cAAC,SAAM,CAACF,UAAU,OAAO6B,OAAK,EAACH,KAAK,SAASI,MAAM,SAASC,SAAUT,EAAa,4BAGlFF,GACC,cAAC,aAAU,CAACQ,OAAO,EAAM,SAAER,MAExB,GAIf,EClBeY,UArDf,WACE,OACE,sBAAKhC,UAAU,yDAAwD,UACrE,cAAC,IAAI,CAACiC,GAAG,IAAIjC,UAAU,+DAA8D,SACrF,qBAAKkC,IAAKC,IAAMnC,UAAU,OAAOoC,IAAI,cAErC,qBAAKpC,UAAU,mDAAkD,SAC/D,qBAAKA,UAAU,uEAAsE,SACnF,qBAAKA,UAAU,iDAAgD,SAC7D,sBAAKA,UAAU,4CAA2C,UACxD,sBAAKA,UAAU,0BAAyB,UACtC,qBACE,cAAY,OACZA,UAAU,yCACVkC,IAAKG,IACLD,IAAI,WAEN,qBACE,cAAY,OACZpC,UAAU,+CACVkC,IAAKI,IACLF,IAAI,cAGR,sBAAMpC,UAAU,wDAAuD,SACrE,sBAAKA,UAAU,SAAQ,UACrB,oBAAIA,UAAU,8DAA6D,4BAI3E,cAAC,EAAiB,IAElB,oBAAIA,UAAU,SAEd,mBAAGA,UAAU,OAAM,SACjB,cAAC,IAAI,CACHA,UAAU,2EACViC,GAAG,cAAa,8DActC,C","file":"static/js/38.6808f408.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5e945e43.svg\";","export default __webpack_public_path__ + \"static/media/forgot-password-office.6075fc44.jpeg\";","export default __webpack_public_path__ + \"static/media/forgot-password-office-dark.2ca0fb3e.jpeg\";","import React, { useContext } from 'react'\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\nimport { Label, Input, HelperText, Button } from '@windmill/react-ui'\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction ResetPasswordForm() {\r\n  const { resetPassword } = useContext(AuthContext)\r\n  const [saved, setSaved] = React.useState(false)\r\n  const query = useQuery()\r\n\r\n  if(saved) {\r\n    return (\r\n      <p className=\"text-sm font-medium text-gray-600\">\r\n        Your password has been reset. Please login using your new password.\r\n      </p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        password: Yup.string().min(8)\r\n          .matches('^.*[0-9].*$', 'Atleast one number required')\r\n          .matches('^.*[a-zA-Z].*$', 'Atleast one letter required')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={({ password }, { setStatus, setSubmitting }) => {\r\n        setSubmitting(true)\r\n        setStatus()\r\n        resetPassword(password, query.get(\"token\") ? query.get(\"token\") : \"\")\r\n        .then(response => {\r\n          setSaved(true)\r\n          setSubmitting(false)\r\n        })\r\n        .catch(error => {\r\n          if(error.response) {\r\n            setStatus(error.response.data.message)\r\n          } else {\r\n            setStatus('Some error occured. Please try again.')\r\n          }\r\n          setSubmitting(false)\r\n        })\r\n      }}\r\n    >  \r\n      {({ errors, status, touched, isSubmitting }) => (\r\n        <Form>\r\n          <Label>\r\n            <span>Password</span>\r\n            <Field className=\"mt-1\" as={Input} name=\"password\" type=\"password\" placeholder=\"***************\" />\r\n            {errors.password && touched.password ? (\r\n              <div>   \r\n                <HelperText valid={false}>{errors.password}</HelperText>\r\n              </div>\r\n            ) : null}\r\n            \r\n          </Label>\r\n\r\n          <Button className=\"mt-4\" block type=\"submit\" value=\"submit\" disabled={isSubmitting}>\r\n            Reset password\r\n          </Button>\r\n          {status && (\r\n            <HelperText valid={false}>{status}</HelperText>\r\n          )}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordForm","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../assets/img/logo.svg'\r\nimport ImageLight from '../assets/img/forgot-password-office.jpeg'\r\nimport ImageDark from '../assets/img/forgot-password-office-dark.jpeg'\r\nimport ResetPasswordForm from '../components/Forms/ResetPasswordForm'\r\n\r\nfunction ResetPassword() {\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n      <Link to=\"/\" className=\"px-8 pt-4 text-xl font-bold text-gray-800 dark:text-gray-200\">\r\n      <img src={logo} className=\"w-40\" alt=\"My logo\" />\r\n      </Link>\r\n      <div className=\"flex flex-1 h-full items-center mt-4 lg:mt-0 p-6\">\r\n        <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden rounded-lg shadow-xl\">\r\n          <div className=\"bg-white rounded-lg shadow-xl dark:bg-gray-800\">\r\n            <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n              <div className=\"h-32 md:h-auto md:w-1/2\">\r\n                <img\r\n                  aria-hidden=\"true\"\r\n                  className=\"object-cover w-full h-full dark:hidden\"\r\n                  src={ImageLight}\r\n                  alt=\"Office\"\r\n                />\r\n                <img\r\n                  aria-hidden=\"true\"\r\n                  className=\"hidden object-cover w-full h-full dark:block\"\r\n                  src={ImageDark}\r\n                  alt=\"Office\"\r\n                />\r\n              </div>\r\n              <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n                <div className=\"w-full\">\r\n                  <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\r\n                    Reset password\r\n                  </h1>\r\n\r\n                  <ResetPasswordForm />\r\n\r\n                  <hr className=\"my-8\" />\r\n\r\n                  <p className=\"mt-4\">\r\n                    <Link\r\n                      className=\"text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline\"\r\n                      to=\"/auth/login\"\r\n                    >\r\n                      Already have an account? Login\r\n                    </Link>\r\n                  </p>\r\n\r\n                </div>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n"],"sourceRoot":""}