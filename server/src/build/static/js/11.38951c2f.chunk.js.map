{"version":3,"sources":["components/Typography/SectionTitle.js","components/Forms/UpdateUserForm.js","components/Forms/UpdatePasswordForm.js","pages/Profile.js"],"names":["SectionTitle","children","className","UpdateUserForm","formRef","callback","m_user","useContext","AuthContext","user","setUser","lastname","useState","saved","setSaved","t","useTranslation","innerRef","initialValues","username","name","email","validationSchema","Yup","shape","required","onSubmit","setStatus","setSubmitting","userService","updateUserDetails","id","then","response","data","error","errors","status","touched","isSubmitting","as","Input","type","placeholder","valid","block","value","disabled","message","UpdatePasswordForm","password","min","matches","updateUserPassword","result","SetTitleTag","Profile"],"mappings":"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","file":"static/js/11.38951c2f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction SectionTitle({ children }) {\r\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\r\n}\r\n\r\nexport default SectionTitle\r\n","import React, { useState, useContext } from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { userService } from '../../services'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { Input, Label, HelperText, Button } from '@windmill/react-ui'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nfunction UpdateUserForm({formRef, callback, m_user}) {\r\n  const { user, lastname, setUser } = useContext(AuthContext)\r\n  const [saved, setSaved] = useState(false)\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Formik\r\n      innerRef={formRef}\r\n      initialValues={{\r\n        username: m_user ? m_user.name : '',\r\n        lastname: m_user ? m_user.lastname : '',\r\n        email: m_user ? m_user.email : '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        username: Yup.string().required(t('First Name is required')),\r\n        lastname: Yup.string().required(t('Last Name is required')),\r\n        email: Yup.string().email().required(t('Email is required')),\r\n      })}\r\n      onSubmit={({ username, lastname, email }, { setStatus, setSubmitting }) => {\r\n        setSaved(false)\r\n        setStatus()\r\n        userService.updateUserDetails(m_user.id, username, email, lastname)\r\n        .then(\r\n          response => {\r\n            setSaved(true)\r\n            setSubmitting(false)\r\n            if(user.id === m_user.id) setUser(response.data)\r\n            if(callback) callback(response.data)\r\n          },\r\n          error => {\r\n            setSubmitting(false);\r\n            if(error.response) {\r\n              setStatus(t(error.response.data));\r\n            } else {\r\n              setStatus(t('Some error occured.'));\r\n            }\r\n            if(callback) callback(null)\r\n          }\r\n        );\r\n      }}\r\n    >  \r\n      {({ errors, status, touched, isSubmitting }) => (\r\n        <Form>\r\n          <div className='flex gap-4'>\r\n            <Label className='flex-1'>\r\n              <span>{t(\"First Name\")}:</span>\r\n              <Field className=\"mt-1\" as={Input} name=\"username\" type=\"text\" placeholder={t(\"enter first name\")} />\r\n              {errors.username && touched.username ? (\r\n                <div>   \r\n                  <HelperText valid={false}>{t(errors.username)}</HelperText>\r\n                </div>\r\n              ) : null}\r\n            </Label>\r\n            <Label className='flex-1'>\r\n              <span>{t(\"Last Name\")}:</span>\r\n              <Field className=\"mt-1\" as={Input} name=\"lastname\" type=\"text\" placeholder={t(\"enter last name\")} />\r\n              {errors.lastname && touched.lastname ? (\r\n                <div>   \r\n                  <HelperText valid={false}>{t(errors.lastname)}</HelperText>\r\n                </div>\r\n              ) : null}\r\n            </Label>\r\n          </div>\r\n          <Label className=\"mt-4\">\r\n            <span>E-Mail:</span>\r\n            <Field className=\"mt-1\" as={Input} name=\"email\" type=\"email\" placeholder={t(\"enter email\")} />\r\n            {errors.email && touched.email ? (\r\n              <div>   \r\n                <HelperText valid={false}>{t(errors.email)}</HelperText>\r\n              </div>\r\n            ) : null}\r\n          </Label>\r\n\r\n          {!formRef && \r\n            <Button className=\"mt-6\" block type=\"submit\" value=\"submit\" disabled={isSubmitting}>\r\n              {t(\"Save Details\")}\r\n            </Button> \r\n          }\r\n\r\n          {status && (\r\n            <HelperText valid={false}>{status.message}</HelperText>\r\n          )}\r\n\r\n          {saved && (\r\n            <HelperText valid={true}>Saved!</HelperText>\r\n          )}\r\n          \r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default UpdateUserForm","import React, { useState } from 'react'\r\nimport { Input, Label, HelperText, Button } from '@windmill/react-ui'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { userService } from '../../services'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nfunction UpdatePasswordForm({formRef, callback, m_user}) {\r\n  const [saved, setSaved] = useState(false)\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Formik\r\n      innerRef={formRef}\r\n      initialValues={{\r\n        password: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        password: Yup.string().min(8)\r\n          .matches('^.*[0-9].*$', 'Atleast one number required')\r\n          .matches('^.*[a-zA-Z].*$', 'Atleast one letter required')\r\n          .required(t('Password is required')),\r\n      })}\r\n      onSubmit={({ password }, { setStatus, setSubmitting }) => {\r\n        setSaved(false)\r\n        setStatus()\r\n        userService.updateUserPassword(m_user.id, password)\r\n        .then(\r\n          result => {\r\n            setSaved(true)\r\n            setSubmitting(false)\r\n            if(callback) callback(result.data)\r\n          },\r\n          error => {\r\n            setSubmitting(false);\r\n            if(error.response) {\r\n              setStatus(error.response.data)\r\n            } else {\r\n              setStatus(\"Some error occured.\")\r\n            }\r\n            if(callback) callback(null)\r\n          }\r\n        )\r\n      }}\r\n    >  \r\n      {({ errors, status, touched, isSubmitting }) => (\r\n        <Form>\r\n          <Label>\r\n            <span>{t(\"type new password\")}:</span>\r\n            <Field className=\"mt-1\" as={Input} name=\"password\" type=\"password\" placeholder=\"***************\" />\r\n            {errors.password && touched.password ? (\r\n              <div>   \r\n                <HelperText valid={false}>{t(errors.password)}</HelperText>\r\n              </div>\r\n            ) : null}\r\n          </Label>\r\n\r\n          {!formRef && \r\n            <Button className=\"mt-6\" block type=\"submit\" value=\"submit\" disabled={isSubmitting}>\r\n              {t(\"Save Password\")}\r\n            </Button> \r\n          }\r\n\r\n          {status && (\r\n            <HelperText valid={false}>{status}</HelperText>\r\n          )}\r\n\r\n          {saved && (\r\n            <HelperText valid={true}>Saved!</HelperText>\r\n          )}\r\n          \r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default UpdatePasswordForm","import React, { useContext } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PageTitle from '../components/Typography/PageTitle'\r\nimport SectionTitle from '../components/Typography/SectionTitle'\r\nimport UpdateUserForm from '../components/Forms/UpdateUserForm'\r\nimport UpdatePasswordForm from '../components/Forms/UpdatePasswordForm'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction SetTitleTag () {\r\n  return (\r\n    <Helmet>\r\n      <title>Einstellungen - 123provisionsfrei</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nfunction Profile() {\r\n  const { user } = useContext(AuthContext)\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <SetTitleTag />\r\n      <PageTitle>{t(\"settings\")}</PageTitle>\r\n      <SectionTitle>{t(\"edit profile\")}</SectionTitle>\r\n\r\n      <div className=\"w-full md:w-1/2 p-6 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <UpdateUserForm m_user={user}/>\r\n      </div>\r\n\r\n      <SectionTitle>{t(\"change password\")}</SectionTitle>\r\n\r\n      <div className=\"w-full md:w-1/2 p-6 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <UpdatePasswordForm m_user={user}/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}